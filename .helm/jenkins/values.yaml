controller:
  installPlugins:
    - kubernetes:3900.va_dce992317b_4
    - workflow-aggregator:596.v8c21c963d92d
    - configuration-as-code:1647.ve39ca_b_829b_42
    - git:5.1.0
  additionalPlugins:
    - github-api:1.314-431.v78d72a_3fe4c3
    - github:1.37.1
    - github-branch-source:1725.vd391eef681a_e #for Github repo structure 
    - remote-file:1.23 #for remote Jenkinsfile
    - job-dsl:1.84 #for org folder setup
  JCasC:
    configScripts:
      default-security: | #can be any name, the content will be picked up by Jenkins
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
                - id: "admin"
                  name: "Jenkins configScripts Admin"
                  password: "admin123"
          authorizationStrategy: 
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
      job-dsl: |
        jobs:
          - script: |
              organizationFolder('pnminh-org') {
                description('This contains branch source jobs for Bitbucket and GitHub')
                displayName('pnminh-org')
                triggers {
                  cron('@midnight')
                }
                organizations {
                  github {
                    repoOwner("pnminh-org")
                    credentialsId("pnminh-org")
                    traits {
                      // Discovers branches on the repository.
                      gitHubBranchDiscovery {
                        // Determines which branches are discovered.
                        // 1 = Exclude branches that are also filed as PRs
                        strategyId(1)
                      }
                      gitHubPullRequestDiscovery {
                        // 1 = Merging the pull request with the current target branch revision
                        strategyId(1)
                      }
                      // Only scan repos that have topics
                      gitHubTopicsFilter {
                        topicList("remote-jenkinsfile")
                      }
                      gitHubExcludeArchivedRepositories()
                    }
                  }
                }
                configure {
                  def traits = it / 'sources' / 'data' / 'jenkins.branch.BranchSource' / 'source' / 'traits'
                  traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                      strategyId(1)
                      trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')
                  }
                }
                projectFactories {
                  remoteJenkinsFileWorkflowMultiBranchProjectFactory {
                    // File or directory name used as marker to recognize the project need to be build.
                    localMarker(null)
                    remoteJenkinsFileSCM {
                      // The git plugin provides fundamental git operations for Jenkins projects.
                      gitSCM {
                        userRemoteConfigs {
                          userRemoteConfig {
                            // Specify the URL or path of the git repository.
                            url("https://github.com/pnminh-org/cicd")
                            // ID of the repository, such as origin, to uniquely identify this repository among other remote repositories.
                            name("origin")
                            // A refspec controls the remote refs to be retrieved and how they map to local refs.
                            refspec("main")
                            // Credential used to check out sources.
                            credentialsId("pnminh-org")
                          }
                        }
                        // List of branches to build.
                        branches {
                          branchSpec {
                          // Specify the branches if you'd like to track a specific branch in a repository.
                            name("main")
                          }
                        }
                        browser {
                          github {
                            // Specify the HTTP URL for this repository's GitHub page (such as https://github.com/jquery/jquery).
                            repoUrl("https://github.com/pnminh-org/cicd")
                          }
                        }
                        gitTool(null)
                      }
                    }
                    matchBranches(false)
                    remoteJenkinsFile("jenkins/org-pipeline/Jenkinsfile")
                  }
                }       
              }
      # global-creds: |
      #   credentials:
      #     system:
      #       domainCredentials:
      #         - credentials:
      #             - usernamePassword:
      #                 scope: GLOBAL
      #                 id: "pnminh-org"
      #                 username: 
      #                 password: 
      #                 description: "Username/Password Credentials for org authentication"